service: notes-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ap-northeast-1
  environment:
    NOTES_TABLE_NAME: !Ref notesTable
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    COGNITO_USERPOOL_ID: !Ref cognitoUserPool
    COGNITO_WEBCLIENT_ID: !Ref cognitoUserPoolWebClient
  iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:*
        Resource: !GetAtt notesTable.Arn

functions:
  createNote:
    handler: handler.createNote
    events:
      - http:
          method: post
          path: notes
          authorizer: authorizer
  getAllNotes:
    handler: handler.getAllNotes
    events:
      - http:
          method: get
          path: notes
          authorizer: authorizer
  updateNote:
    handler: handler.updateNote
    events:
      - http:
          method: put
          path: notes/{id}
          authorizer: authorizer
  deleteNote:
    handler: handler.deleteNote
    events:
      - http:
          method: delete
          path: notes/{id}
          authorizer: authorizer
  authorizer:
    handler: authorizer.handler


plugins:
  - serverless-iam-roles-per-function

resources:
  Resources:
    ${file(resources.yml)}
